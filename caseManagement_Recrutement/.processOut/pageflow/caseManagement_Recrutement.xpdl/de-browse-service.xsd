<?xml version="1.0" encoding="UTF-8"?><xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://browse.api.de.n2.tibco.com" xmlns:de="http://api.de.n2.tibco.com" xmlns:orgdto="http://api.organisation.common.n2.tibco.com" targetNamespace="http://browse.api.de.n2.tibco.com" version="1.0">
	<xs:import namespace="http://api.organisation.common.n2.tibco.com" schemaLocation="organisation.xsd"/>
	<xs:import namespace="http://api.de.n2.tibco.com" schemaLocation="de.xsd"/>
	<xs:element name="listCapabilities">
		<xs:annotation>
			<xs:documentation>Request element for listCapabilities operation.

This operation lists the capabilities available in a given organization model version. If no organization model version is specified (or -1) then the organization model with the greatest major version value is assumed.

The result includes the GUID and name of each capabiliy. If a capability is qualified, the qualifier is also described (including the data-type and permitted values where applicable).</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="orgdto:XmlOrgModelVersion"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="listCapabilitiesResponse">
		<xs:annotation>
			<xs:documentation>Response element for listCapabilities operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>
        </xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="capability" type="de:XmlQualifiedEntity">
					<xs:annotation>
						<xs:documentation>Details of each capability defined in the organization model.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="listPrivileges">
		<xs:annotation>
			<xs:documentation>Request element for listPrivileges operation. 

This operation lists the privileges available in a given organization model version. If no organization model version is specified (or -1) then the organization model with the greatest major version value is assumed.

The result includes the GUID and name of each privilege. If a privilege is qualified, the qualifier is also described (including the data-type and permitted values where applicable).</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="orgdto:XmlOrgModelVersion"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="listPrivilegesResponse">
		<xs:annotation>
			<xs:documentation>Response element for listPrivileges operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>
        </xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="privilege" type="de:XmlQualifiedEntity">
					<xs:annotation>
						<xs:documentation>Details of each privilege defined in the organization model.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getPrivileges">
		<xs:annotation>
			<xs:documentation>Request element for getPrivileges operation. 

This operation returns the privileges associated with the organization unit, position or group identified in the request by its entity-type, guid and model version. If no organization model version is specified (or -1) then the organization model with the greatest major version value is assumed.

The response includes only those privileges directly associated with the identified entity, and not those that the entity might inherit from its parent. (For example, a position inherits privileges from its parent organization unit.) If a privilege is qualified, the qualifier values will be included in the qualifierSet elements for that entry.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="orgdto:XmlModelEntityId"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="getPrivilegesResponse">
		<xs:annotation>
			<xs:documentation>Response element for getPrivileges operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>
        </xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="privilege" type="de:XmlModelEntity">
					<xs:annotation>
						<xs:documentation>Details of each privilege associated with the specified organization model entity.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="getCapabilities">
		<xs:annotation>
			<xs:documentation>Request element for getCapabilities operation. 

This operation returns the capabilities associated with the position, group or resource identified in the request by its entity-type, guid and model version. If no organization model version is specified (or -1) then the organization model with the greatest major version value is assumed.

If a capability is qualified, the qualifier values will be included in the qualifierSet elements for that entry.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="orgdto:XmlModelEntityId"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="getCapabilitiesResponse">
		<xs:annotation>
			<xs:documentation>Response element for getCapabilities operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>
        </xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="capability" type="de:XmlModelEntity">
					<xs:annotation>
						<xs:documentation>Details of each capability associated with the specified organization model entity.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="listModelVersions">
		<xs:annotation>
			<xs:documentation>Request element for listModelVersions operation. This operation lists the available organization model major versions. 

For each major version, the organization model deployments that make up that version will be detailed - giving their full version number, name and date deployed.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="de:EmptyRequest"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="listModelVersionsResponse">
		<xs:annotation>
			<xs:documentation>Response element for listModelVersions operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="versions" type="de:XmlOrgModelVersionDetail">
					<xs:annotation>
						<xs:documentation>Major version number(s) of the organization model. Each element will list the details of the deployment artefact that makes up that major version.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="openOrgModel">
		<xs:annotation>
			<xs:documentation>Request element for openOrgModel operation. 

This operation returns the root entities of the organization model identified by the given major version number. If no organization model version is specified (or -1) then the organization model with the greatest major version value is assumed.

Each root-node in the response will indicate whether it has any children - for example, an organization entity
may have organization unit entities as its children. If so, the identifiers for those immediate children will be given in the "child" sub-elements. These identifiers can, in-turn, be passed to the browseModelNode service in order to drill-down further into the organization model structure.

For organization entities, this operation will identify those LDAP containers that administer them. That is, those LDAP containers whose resources are permitted to view that organization structure. If no LDAP containers are listed, then the organization can be accessed by all resources.

Where applicable, each node in the response will specify the "selection-mode" by which associated resources will be selected for work allocation. 
            
This operation is used with the browseModelNode service to provide a drill-down view of an organization model structure. It is useful for large organization models, where retrieving the entire structure would be expensive. The recommended alternative is to use the listOrgModelOverview operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="orgdto:XmlOrgModelVersion"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="openOrgModelResponse">
		<xs:annotation>
			<xs:documentation>Response element for openOrgModel operation. 
This identifies the version of the organization model and lists the organization, group and location entities that form the roots through which the organization model can be traversed.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="orgdto:XmlOrgModelVersion">
					<xs:sequence>
						<xs:element maxOccurs="unbounded" minOccurs="0" name="root-node" type="de:XmlOrgModelNode">
							<xs:annotation>
								<xs:documentation>Details of each root-node organization model entity (organization, group or location).</xs:documentation>
							</xs:annotation>
						</xs:element>
					</xs:sequence>
				</xs:extension>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="browseModelNode">
		<xs:annotation>
			<xs:documentation>Request element for browseModelNode operation. This operation returns the details of the organization model entity identified by its entity-type, guid and organization model version. If no organization model  version is specified (or -1) then the organization model with the greatest major version value is assumed.

 Each root-node in the response will indicate whether it has any children. For example, an organization entity may have organization unit entities as its children. If so, the identifiers for those immediate children will be given in the "child" sub-elements. These identifiers can, in-turn, be passed back into the browseModelNode operation in order to drill-down further into the organization model structure.

 For organization entities, this operation will identify those LDAP containers that administer them. That is those LDAP containesr whose resources are permitted to view that organization structure. If no LDAP containers are listed, then the organization can be accessed by all resources.

Where applicable, each node in the response will specify the "selection-mode" by which associated resources will be selected for work allocation. 

This operation is used with the openOrgModel operation to provide a drill-down view of an organization model structure.
It is useful for large organization models, where retrieving the entire structure would be expensive. The recommended alternative is to use the listOrgModelOverview operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="orgdto:XmlModelEntityId"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="browseModelNodeResponse">
		<xs:annotation>
			<xs:documentation>Response element for browseModelNode operation. 

Returns the details about a specific organization model entity and its immediate children. Any child entities will identify whether they, themselves, have child entities, but will not contain those child entities. Another request to browse a child entity will be required to retrieve its child entities.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="de:XmlOrgModelNode"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="listOrgModelOverview">
		<xs:annotation>
			<xs:documentation>Request element for listOrgModelOverview operation. 

This operation returns the structure of the organization model identified by given major version number. If no organization model version is specified (or -1) then the organization model with the greatest major version value is assumed.

The response will include the entire group hierarchy, organization, organization unit and position hierarchy and the locations defined in the organization model.

For organization entities, this operation will identify those LDAP containers that administer them. That is, those LDAP containers whose resources are permitted to view that organization structure. If no LDAP containers are listed, then the organization can be accessed by all resources.

Where applicable, each node in the response will specify the "selection-mode" by which associated resources will be selected for work allocation. 
            </xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="orgdto:XmlOrgModelVersion"/>
			</xs:complexContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="listOrgModelOverviewResponse">
		<xs:annotation>
			<xs:documentation>Response element for listOrgModelOverview operation.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:annotation>
				<xs:documentation>
        </xs:documentation>
			</xs:annotation>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="root-node" type="de:XmlOrgModelNode">
					<xs:annotation>
						<xs:documentation>Details of each root-node organization model entity (organization, group or location).</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="listOrganizations" type="de:EmptyRequest">
		<xs:annotation>
			<xs:documentation>Request to provide a list of all organizations currently deployed. 

This operation returns a list of all organization entities, from all organization model versions. Each organization is identified by itsentity-type, guid, model-version and name.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="listOrganizationsResponse">
		<xs:annotation>
			<xs:documentation>Response element providing a list of all Organizations currently deployed.</xs:documentation>
		</xs:annotation>
		<xs:complexType>
			<xs:sequence>
				<xs:element maxOccurs="unbounded" minOccurs="0" name="Organizations" type="de:XmlModelEntity"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
</xs:schema>
